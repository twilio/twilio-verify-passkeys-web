version: 2.1

orbs:
  node: circleci/node@5.2.0

aliases:
  - &tmp-workspace
      tmp/workspace
  - &env-vars-file
      env_vars

executors:
  ubuntu-small-executor:
    # https://circleci.com/developer/images/image/cimg/base
    docker:
      - image: cimg/base:2025.02
    resource_class: small

parameters:
  generate-app:
    type: boolean
    default: false
  e2e-tests:
    type: boolean
    default: false

jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests
          command: npm run test
  build:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Set sample backend URL
          command: |
            cd sample-app
            sed -i -e "s|const API_URL = \".*\"|const API_URL = \"${SAMPLE_BACKEND_URL}\"|" config.js
      - store_artifacts:
          path: sample-app/
          destination: sample-app
      - store_artifacts:
          path: dist/
          destination: dist
      - run:
          name: Save web url
          command: |
            export WEB_URL="https://output.circle-artifacts.com/output/job/${CIRCLE_WORKFLOW_JOB_ID}/artifacts/${CIRCLE_NODE_INDEX}/sample-app/index.html"
            echo $WEB_URL
            ./scripts/add_env_variable_to_file.sh WEB_URL $WEB_URL $TMP_WORKSPACE $ENV_VARS_FILE
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file
      - persist_to_workspace:
          root: *tmp-workspace
          paths:
            - *env-vars-file

  run-web-local-sdk-e2e-tests:
    executor: ubuntu-small-executor

    parameters:
      waiting_job_name:
        default: ""
        type: string

    steps:
      - checkout
      - attach_workspace:
          at: *tmp-workspace
      - run:
          name: Start automation pipeline to run E2E tests
          command: |
            source "$TMP_WORKSPACE/$ENV_VARS_FILE"
            
            TRIGGER_PIPELINE=$(./scripts/e2e_tests/trigger_e2e_tests_pipeline.sh $WEB_URL $CIRCLE_WORKFLOW_ID << parameters.waiting_job_name >>)
            echo "Trigger pipeline: $TRIGGER_PIPELINE"
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file
      - persist_to_workspace:
          root: *tmp-workspace
          paths:
            - *env-vars-file
  check-web-local-sdk-e2e-tests-result:
    executor: ubuntu-small-executor

    parameters:
      job_name_to_check:
        default: ""
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: *tmp-workspace
      - run:
          name: Check triggered job status
          command: |
            source "$TMP_WORKSPACE/$ENV_VARS_FILE"
            echo $WEB_LOCAL_E2E_TESTS_TRIGGERED_PIPELINE
            
            TRIGGERED_E2E_TESTS_PIPELINE_APPROVAL_BY=$(./scripts/e2e_tests/check_triggered_e2e_tests_pipeline_approval_by.sh $CIRCLE_WORKFLOW_ID << parameters.job_name_to_check >>)
            echo "Triggered pipeline approval by: $TRIGGERED_E2E_TESTS_PIPELINE_APPROVAL_BY"
            
            if [[ "$TRIGGERED_E2E_TESTS_PIPELINE_APPROVAL_BY" != "$GITHUB_USER_NAME" ]]; then
              echo "Workflow not successful - approved by ${TRIGGERED_E2E_TESTS_PIPELINE_APPROVAL_BY}"
              (exit -1) 
            fi
          environment:
            TMP_WORKSPACE: *tmp-workspace
            ENV_VARS_FILE: *env-vars-file

  release:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Initialize git user
          command: |
            git config --global user.email "svc.authid-sdk-ci@twilio.com"
            git config --global user.name "authid-sdk-ci"
      - run:
          name: Setup git
          command: git branch --set-upstream-to=origin/main main
      - run:
          name: Authenticate with registry
          command: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build Library
          command: npm run build
      - run:
          name: Release
          command: npm run release


workflows:
  build_and_test:
    when:
      and:
        - equal: [ false, << pipeline.parameters.generate-app >> ]
        - equal: [ false, << pipeline.parameters.e2e-tests >> ]
    jobs:
      - test
      - build:
          context:
            - verify-passkeys
          requires:
            - test
      - run-web-local-sdk-e2e-tests:
          context:
            - verify-passkeys
          waiting_job_name: wait-for-web-local-sdk-e2e-tests
          requires:
            - build
          filters:
            branches:
              only:
                - ymoreno/e2e-tests
      - wait-for-web-local-sdk-e2e-tests:
          type: approval
          requires:
            - run-web-local-sdk-e2e-tests
      - check-web-local-sdk-e2e-tests-result:
          context:
            - verify-passkeys
          job_name_to_check: "wait-for-web-local-sdk-e2e-tests"
          requires:
            - wait-for-web-local-sdk-e2e-tests
  release_sdk:
    when:
      and:
        - equal: [ false, << pipeline.parameters.generate-app >> ]
        - equal: [ false, << pipeline.parameters.e2e-tests >> ]
        - matches:
            pattern: "^main$"
            value: << pipeline.git.branch >>
    jobs:
      - test
      - release:
          context:
            - verify-passkeys
            - verify-passkeys-web
          requires:
            - test
  generate_app:
    when:
      and:
        - equal: [ true, << pipeline.parameters.generate-app >> ]
    jobs:
      - build
  execute_e2e_tests:
      when:
        and:
        - equal: [ true, << pipeline.parameters.e2e-tests >> ]
      jobs:
        - build:
            context:
              - verify-passkeys
        - run-web-local-sdk-e2e-tests:
            context:
              - verify-passkeys
            waiting_job_name: wait-for-web-local-sdk-e2e-tests
            requires:
              - build
        - wait-for-web-local-sdk-e2e-tests:
            type: approval
            requires:
              - run-web-local-sdk-e2e-tests
        - check-web-local-sdk-e2e-tests-result:
            context:
              - verify-passkeys
            job_name_to_check: "wait-for-web-local-sdk-e2e-tests"
            requires:
              - wait-for-web-local-sdk-e2e-tests